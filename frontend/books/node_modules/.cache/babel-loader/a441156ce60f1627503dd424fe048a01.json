{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Security/Security.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, Input, message } from 'antd';\nimport { logout, deactivateUser, passwordChangeUI } from '../../../../../Store/Action/auth';\nimport { connect } from 'react-redux';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nconst {\n  confirm\n} = Modal;\nexport class Security extends Component {\n  //  Holds the state variables\n  //  Constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      password: ''\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.deactivateAccount = this.deactivateAccount.bind(this);\n    this.openPasswordReset = this.openPasswordReset.bind(this);\n    this.showDeactivateConfirm = this.showDeactivateConfirm.bind(this);\n  } //  Handle Logout\n\n\n  handleLogout() {\n    this.props.logout();\n  } //  Fired when decativate button is clicked\n\n\n  deactivateAccount() {\n    this.props.deactivateUser();\n  } //  Makes password reset dialog visible\n\n\n  openPasswordReset() {\n    this.setState({\n      visible: true\n    });\n  } //  Hits the reset password API \n\n\n  handlePasswordReset() {\n    if (this.state.password === '') {\n      message.error('Password Field can not be empty');\n    } else {\n      this.props.passwordChangeUI(this.state.password);\n    }\n  } //  Update State\n\n\n  //  Fired when the component recieves new props\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.error !== undefined) {\n      if (nextProps.error.message === 'Network Error') {\n        message.success(nextProps.error.message);\n      } else {\n        message.success(nextProps.error.response.data.error);\n      }\n    }\n\n    if (nextProps.auth.msg === 'Successfull') {\n      message.success('Password Changed Successfully');\n      this.setState({\n        visible: false\n      });\n    }\n  } //  Confirm Dialog to confirm if user wants to deactivate account or not\n\n\n  showDeactivateConfirm(deactivateAccount) {\n    confirm({\n      title: 'Are you sure to Deactivate this Account?',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleFilled, {\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this),\n      content: 'Deactivating does not delete your Account, just locks your Account.  To Re-Activate your Account, contact Admin.',\n\n      onOk() {\n        deactivateAccount();\n      },\n\n      onCancel() {}\n\n    });\n  } //  Confirm Dialog to confirm if user wants to Logout account or not\n\n\n  showLogoutConfirm(logoutAccount) {\n    confirm({\n      title: 'Are you sure to Logout from this Account?',\n      icon: /*#__PURE__*/_jsxDEV(ExclamationCircleFilled, {\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this),\n      content: 'By Logging out, the session ends.  To Login back, you need to provide your credentials again.',\n\n      onOk() {\n        logoutAccount();\n      },\n\n      onCancel() {}\n\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Security Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), \"These settings are helps you keep your account secure.\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          marginTop: '60px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#8a8a8a'\n            },\n            children: \"Set a unique password to protect your account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            shape: \"round\",\n            onClick: this.openPasswordReset,\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#8a8a8a'\n            },\n            children: \"This does not delete your account, but just end the session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            shape: \"round\",\n            onClick: () => this.showLogoutConfirm(this.props.logout),\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Deactivate Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#8a8a8a'\n            },\n            children: \"Data about this account will not be deleted from our server since your are deactivating. \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            shape: \"round\",\n            onClick: () => this.showDeactivateConfirm(this.props.deactivateUser),\n            children: \"Deactivate Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Password Change\",\n        centered: true,\n        visible: this.state.visible,\n        okText: \"Change Password\",\n        onOk: () => this.handlePasswordReset(),\n        onCancel: () => this.setState({\n          visible: false\n        }),\n        width: 500,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"New Password\",\n          value: this.state.password,\n          name: \"password\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.isLoading,\n  auth: state.auth.user,\n  error: state.auth.error\n});\n\nexport default connect(mapStateToProps, {\n  logout,\n  deactivateUser,\n  passwordChangeUI\n})(Security);","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Security/Security.js"],"names":["React","Component","Button","Modal","Input","message","logout","deactivateUser","passwordChangeUI","connect","ExclamationCircleFilled","confirm","Security","constructor","props","state","visible","password","onChange","e","setState","target","name","value","deactivateAccount","bind","openPasswordReset","showDeactivateConfirm","handleLogout","handlePasswordReset","error","componentWillReceiveProps","nextProps","undefined","success","response","data","auth","msg","title","icon","color","content","onOk","onCancel","showLogoutConfirm","logoutAccount","render","marginTop","textAlign","mapStateToProps","isAuthenticated","isLoading","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Modal, Input, message } from 'antd'\nimport { logout, deactivateUser,passwordChangeUI} from '../../../../../Store/Action/auth';\nimport { connect } from 'react-redux';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\n\nconst { confirm } = Modal;\n\nexport class Security extends Component {\n\n    //  Holds the state variables\n    state = {\n        visible: false,\n        password: ''\n    }\n\n    //  Constructor\n    constructor(props){\n        super(props)\n        this.deactivateAccount = this.deactivateAccount.bind(this)\n        this.openPasswordReset = this.openPasswordReset.bind(this)\n        this.showDeactivateConfirm = this.showDeactivateConfirm.bind(this)\n    }\n\n    //  Handle Logout\n    handleLogout(){\n        this.props.logout()\n    }\n\n    //  Fired when decativate button is clicked\n    deactivateAccount(){\n        this.props.deactivateUser()\n    }\n\n    //  Makes password reset dialog visible\n    openPasswordReset(){\n        this.setState({visible: true})\n    }\n    \n    //  Hits the reset password API \n    handlePasswordReset(){\n\n        if(this.state.password === ''){message.error('Password Field can not be empty')}\n        else{this.props.passwordChangeUI(this.state.password)}\n    }\n\n    //  Update State\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n\n    //  Fired when the component recieves new props\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                message.success(nextProps.error.message)\n            }else{\n                message.success(nextProps.error.response.data.error)\n            }\n        }\n        if(nextProps.auth.msg === 'Successfull'){\n            message.success('Password Changed Successfully')\n            this.setState({visible: false})\n        }\n    }\n\n    //  Confirm Dialog to confirm if user wants to deactivate account or not\n    showDeactivateConfirm(deactivateAccount) {\n        confirm({\n          title: 'Are you sure to Deactivate this Account?',\n          icon: <ExclamationCircleFilled style={{ color: 'red' }}/>,\n          content: 'Deactivating does not delete your Account, just locks your Account.  To Re-Activate your Account, contact Admin.',\n          onOk() {\n              deactivateAccount()\n          },\n          onCancel() {\n          },\n        });\n      }\n\n    //  Confirm Dialog to confirm if user wants to Logout account or not\n    showLogoutConfirm(logoutAccount) {\n        confirm({\n          title: 'Are you sure to Logout from this Account?',\n          icon: <ExclamationCircleFilled style={{ color: 'red' }}/>,\n          content: 'By Logging out, the session ends.  To Login back, you need to provide your credentials again.',\n          onOk() {\n            logoutAccount()\n          },\n          onCancel() {\n          },\n        });\n      }\n\n    render() {\n        return (\n          <div>\n            <h3>Security Settings</h3>\n            These settings are helps you keep your account secure.\n            <div className=\"row\" style={{ marginTop: '60px' }}>\n                <div className=\"col\">\n                    <h5>Change Password</h5>\n                    <p style={{ color: '#8a8a8a' }}>Set a unique password to protect your account.</p>\n                </div>\n                <div className=\"col\" style={{ textAlign: 'center' }}>\n                    <Button type=\"primary\" shape=\"round\" onClick={this.openPasswordReset}>Change Password</Button>\n                </div>\n            </div>\n            <div className=\"row\" style={{ marginTop: '20px' }}>\n                <div className=\"col\">\n                    <h5>Logout</h5>\n                    <p style={{ color: '#8a8a8a' }}>This does not delete your account, but just end the session</p>\n                </div>\n                <div className=\"col\" style={{ textAlign: 'center' }}>\n                    <Button type=\"danger\" shape=\"round\" onClick={()=>this.showLogoutConfirm(this.props.logout)}>Logout</Button>\n                </div>\n            </div>\n            <div className=\"row\" style={{ marginTop: '20px' }}>\n                <div className=\"col\">\n                    <h5>Deactivate Account</h5>\n                    <p style={{ color: '#8a8a8a' }}>Data about this account will not be deleted from our server since your are deactivating. </p>\n                </div>\n                <div className=\"col\" style={{ textAlign: 'center' }}>\n                    <Button type=\"danger\" shape=\"round\" onClick={()=>this.showDeactivateConfirm(this.props.deactivateUser)}>Deactivate Account</Button>\n                </div>\n            </div>\n            <Modal\n                title=\"Password Change\"\n                centered\n                visible={this.state.visible}\n                okText=\"Change Password\"\n                onOk={() => this.handlePasswordReset()}\n                onCancel={() => this.setState({visible: false})}\n                width={500}\n            >\n                <Input placeholder=\"New Password\" value={this.state.password} name=\"password\" onChange={this.onChange}></Input>\n            </Modal>\n          </div>\n        )\n    }\n  \n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    auth: state.auth.user,\n    error: state.auth.error\n  });\n  \n\nexport default connect(mapStateToProps,{logout,deactivateUser,passwordChangeUI})(Security);"]},"metadata":{},"sourceType":"module"}