{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Components/Search/Search.js\";\nimport React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { TextField, InputAdornment } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux'; // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\nconst top100Films = [{\n  home: 'Home',\n  route: \"/\"\n}, {\n  home: 'Profile',\n  route: \"/profile\"\n}, {\n  home: 'Account',\n  route: \"/accounts\"\n}, {\n  home: 'Expense',\n  route: \"/expense\"\n}, {\n  home: 'Tags',\n  route: \"/tags\"\n}];\nexport class Search extends React.Component {\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  redirect(route) {\n    console.log(route); // if(route === 'Home'){}\n    // else if(route === 'Profile'){return <Redirect to='/profile'/>}\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"search-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-group-prepend\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"input-group-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          multiple: true,\n          id: \"free-solo-demo\",\n          freeSolo: true,\n          options: top100Films,\n          disableCloseOnSelect: true,\n          getOptionLabel: option => option.home,\n          onChange: (event, input) => {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 36\n            }, this); // this.redirect(event.target.innerText)\n          },\n          renderOption: (option, {\n            selected\n          }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: option.home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this),\n          style: {\n            width: 500\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            placeholder: \"Search\",\n            InputProps: { ...params.InputProps,\n              disableUnderline: true,\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  \"data-feather\": \"search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 183\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 150\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default _c2 = connect(_c = withRouter(Search));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$connect\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Components/Search/Search.js"],"names":["React","Autocomplete","CheckBoxOutlineBlankIcon","CheckBoxIcon","Checkbox","TextField","InputAdornment","Redirect","withRouter","connect","top100Films","home","route","Search","Component","componentDidMount","console","log","props","redirect","render","option","event","input","selected","width","params","InputProps","disableUnderline","startAdornment"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {TextField, InputAdornment} from '@material-ui/core';\nimport {Redirect} from 'react-router-dom'\nimport {withRouter} from 'react-router'\nimport { connect } from 'react-redux';\n\n\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\nconst top100Films = [\n    { home: 'Home', route: \"/\"},\n    { home: 'Profile', route: \"/profile\"},\n    { home: 'Account', route: \"/accounts\"},\n    { home: 'Expense', route:\"/expense\"},\n    { home: 'Tags', route: \"/tags\"},\n  ];\n\nexport class Search extends React.Component {\n\n    componentDidMount(){\n        console.log(this.props)\n    }\n\n    redirect(route) {\n        console.log(route)\n        // if(route === 'Home'){}\n        // else if(route === 'Profile'){return <Redirect to='/profile'/>}\n    }\n\n    render() {\n        return(\n            <form class=\"search-form\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                    <div class=\"input-group-text\">\n                        \n                    </div>\n                    </div>\n                    <Autocomplete\n                        multiple\n                        id=\"free-solo-demo\"\n                        freeSolo\n                        options={top100Films}\n                        disableCloseOnSelect\n                        getOptionLabel={(option) => option.home}\n                        onChange={(event,input)=>{\n                            return <Redirect to='/'/>\n                            // this.redirect(event.target.innerText)\n                        }}\n                        renderOption={(option, { selected }) => (\n                            <React.Fragment>\n                                <div>\n                                    {option.home}\n                                </div>\n                            </React.Fragment>\n                        )}\n                        style={{ width: 500 }}\n                        renderInput={(params) => (\n                            <TextField {...params} placeholder=\"Search\"  InputProps={{...params.InputProps, disableUnderline: true, startAdornment: (<InputAdornment position=\"start\"><i data-feather=\"search\"></i> </InputAdornment> ) }}/>\n                        )}\n                        />\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default connect(withRouter(Search))"]},"metadata":{},"sourceType":"module"}