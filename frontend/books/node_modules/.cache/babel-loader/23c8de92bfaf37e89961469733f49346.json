{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Logs/Logs.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Button } from 'antd';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport { jsPDF } from 'jspdf';\nimport \"jspdf-autotable\";\nexport class Logs extends Component {\n  //  Constructor\n  constructor(props) {\n    super(props);\n    this.handleDownload = this.handleDownload.bind(this);\n  } //  Download all the Activities of the User\n\n\n  handleDownload() {\n    const title = this.props.auth ? this.props.auth.user.first_name + \"  Login Report - NEXTBOOKS\" : \"\";\n    const headers = [[\"ID\", \"AGENT\", \"IP\", \"DATE\"]];\n    const marginLeft = 40;\n    const orientation = \"portrait\"; // portrait or landscape\n\n    const doc = new jsPDF(orientation);\n    doc.setFontSize(15);\n\n    if (this.props.auth) {\n      const data = this.props.auth.user.logs.map(elt => [elt._id, elt.agent, elt.ip, moment(elt.last_login).format('LLL')]);\n      let content = {\n        startY: 50,\n        head: headers,\n        body: data\n      };\n      doc.text(title, marginLeft, 40);\n      doc.autoTable(content);\n    }\n\n    doc.save(this.props.auth ? this.props.auth.user.first_name + \"  Login Report\" : \"\");\n  }\n\n  render() {\n    console.log(this.props.auth.user.logs.reverse());\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this), \"Here is your last 10 login activities log\", /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        onClick: this.handleDownload,\n        children: [/*#__PURE__*/_jsxDEV(DownloadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 95\n        }, this), \"Download all activities as PDF\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User Agent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"IP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.props.auth ? this.props.auth.user.logs.reverse().slice(0, 10).map(data => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      width: '200px',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis'\n                    },\n                    children: data.agent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: data.ip ? data.ip : \"Ip Address Not Found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: moment(data.last_login).format('LLL')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)]\n              }, data._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this);\n            }) : \"No data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth.user\n});\n\nexport default connect(mapStateToProps)(Logs);","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Logs/Logs.js"],"names":["React","Component","connect","moment","Button","DownloadOutlined","jsPDF","Logs","constructor","props","handleDownload","bind","title","auth","user","first_name","headers","marginLeft","orientation","doc","setFontSize","data","logs","map","elt","_id","agent","ip","last_login","format","content","startY","head","body","text","autoTable","save","render","console","log","reverse","float","marginTop","slice","width","overflow","textOverflow","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport moment from 'moment'\nimport{ Button } from 'antd'\nimport { DownloadOutlined } from '@ant-design/icons';\nimport {jsPDF} from 'jspdf'\nimport \"jspdf-autotable\";\n\nexport class Logs extends Component {\n\n    //  Constructor\n    constructor(props){\n        super(props)\n        this.handleDownload = this.handleDownload.bind(this)\n    }\n\n    //  Download all the Activities of the User\n    handleDownload(){\n        const title = this.props.auth?this.props.auth.user.first_name+\"  Login Report - NEXTBOOKS\":\"\";\n        const headers = [[\"ID\", \"AGENT\", \"IP\", \"DATE\"]];  \n        const marginLeft = 40;\n        const orientation = \"portrait\"; // portrait or landscape\n        const doc = new jsPDF(orientation);\n\n        doc.setFontSize(15);    \n        if(this.props.auth){\n            const data = this.props.auth.user.logs.map(elt=> [elt._id, elt.agent, elt.ip, moment(elt.last_login).format('LLL')]);  \n            let content = {\n                startY: 50,\n                head: headers,\n                body: data\n              };\n            doc.text(title,marginLeft, 40)\n            doc.autoTable(content);\n        }\n        doc.save(this.props.auth?this.props.auth.user.first_name+\"  Login Report\":\"\");\n    }\n    render() {\n        console.log(this.props.auth.user.logs.reverse())\n        return (\n          <div>\n              <h3>Login Activity</h3>\n              Here is your last 10 login activities log\n              <Button type=\"primary\" style={{ float: 'right' }} onClick={this.handleDownload}><DownloadOutlined />Download all activities as PDF</Button>\n              <div className=\"container\" style={{ marginTop: '30px' }}>\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th>User Agent</th>\n                            <th>IP</th>\n                            <th>Time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.auth?this.props.auth.user.logs.reverse().slice(0,10).map((data)=>{\n                            return(\n                                <tr key={data._id}>\n                                    <td><p style={{ width: '200px', overflow: 'hidden', textOverflow: 'ellipsis' }}>{data.agent}</p></td>\n                                    <td>{data.ip?data.ip:\"Ip Address Not Found\"}</td>\n                                    <td>{moment(data.last_login).format('LLL')}</td>\n                                </tr>\n                            )\n                        }):\"No data\"}\n                    </tbody>\n                </table>\n              </div>\n          </div>\n        )\n    }\n  \n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth.user\n});\n\nexport default connect(mapStateToProps,)(Logs);"]},"metadata":{},"sourceType":"module"}