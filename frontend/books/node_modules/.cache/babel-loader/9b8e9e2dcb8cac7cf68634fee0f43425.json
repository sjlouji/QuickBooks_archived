{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/PrivateRoute.js\";\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const {\n    isAuthenticated\n  } = rest;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n\n_c = PrivateRoute;\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/PrivateRoute.js"],"names":["connect","Redirect","Route","PrivateRoute","component","Component","rest","isAuthenticated","props","pathname","state","from","location","mapStateToProps","auth"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AACtD,QAAM;AAACC,IAAAA;AAAD,MAAoBD,IAA1B;AAEA,sBACE,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAAEE,KAAK,IAC5BD,eAAe,gBACb,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,YADa,gBAGb,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACZC,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAFK;AAAd;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhBH;;KAAMT,Y;;AAmBJ,SAASU,eAAT,CAAyBH,KAAzB,EAAgC;AAC9B,SAAO;AACLH,IAAAA,eAAe,EAAEG,KAAK,CAACI,IAAN,CAAWP;AADvB,GAAP;AAGD;;AAED,eAAeP,OAAO,CAACa,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router'\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    const {isAuthenticated} = rest;\n  \n    return (\n      <Route {...rest} render={props => (\n        isAuthenticated ? (\n          <Component {...props}/>\n        ) : (\n          <Redirect to={{\n            pathname: '/login',\n            state: {from: props.location}\n          }}/>\n        )\n      )}\n      />\n    );\n  };\n\n  \n  function mapStateToProps(state) {\n    return {\n      isAuthenticated: state.auth.isAuthenticated,\n    };\n  }\n  \n  export default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}