{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/PrivateRoute.js\";\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const {\n    isAuthenticated\n  } = rest;\n  console.log('in private route', isAuthenticated);\n  console.log('in private route', props);\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = PrivateRoute;\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/PrivateRoute.js"],"names":["connect","Redirect","Route","PrivateRoute","component","Component","rest","isAuthenticated","console","log","props","pathname","mapStateToProps","state","auth"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AACtD,QAAM;AAACC,IAAAA;AAAD,MAAoBD,IAA1B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,eAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,KAAhC;;AACA,MAAG,CAACH,eAAJ,EAAqB;AACjB,wBACI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACVI,QAAAA,QAAQ,EAAE;AADA;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACF,CAXH;;KAAMR,Y;;AAcJ,SAASS,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLN,IAAAA,eAAe,EAAEM,KAAK,CAACC,IAAN,CAAWP;AADvB,GAAP;AAGD;;AAED,eAAeP,OAAO,CAACY,eAAD,CAAP,CAAyBT,YAAzB,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router'\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    const {isAuthenticated} = rest;\n    console.log('in private route', isAuthenticated)\n    console.log('in private route', props)\n    if(!isAuthenticated) {\n        return (\n            <Redirect to={{\n                pathname: '/login',\n              }}/>\n        )\n    }\n  };\n\n  \n  function mapStateToProps(state) {\n    return {\n      isAuthenticated: state.auth.isAuthenticated,\n    };\n  }\n  \n  export default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}