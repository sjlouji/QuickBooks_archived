[{"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/reportWebVitals.js":"1","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/App.js":"2","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/index.js":"3","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Auth/LoginPage/LoginPage.js":"4","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Store/Reducer/index.js":"5","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Route.js":"6","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Auth/RegisterPage/RegisterPage.js":"7","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Auth/PasswordResetPage/ForgotPasswordPage.js":"8","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Home.js":"9","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Dashboard/Dashboard.js":"10","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Components/Profile/Profile.js":"11","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Components/Search/Search.js":"12","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/ProfilePage.js":"13","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Store/configureStore.js":"14","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Components/Notification/Notification.js":"15","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Store/Reducer/auth.js":"16","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Store/Action/auth.js":"17","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Auth/PasswordResetPage/ResetPassword.js":"18","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Store/Action/types.js":"19","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Personal/Info.js":"20","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Logs/Logs.js":"21","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Firebase/firebase.js":"22","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Security/Security.js":"23","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Accounts/Accounts.js":"24","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Notifications/Notification.js":"25","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Accounts/Components/AccountTable.js":"26"},{"size":362,"mtime":1611404133772,"results":"27","hashOfConfig":"28"},{"size":929,"mtime":1612609686467,"results":"29","hashOfConfig":"28"},{"size":53,"mtime":1612613814541,"results":"30","hashOfConfig":"28"},{"size":7527,"mtime":1612670405411,"results":"31","hashOfConfig":"28"},{"size":112,"mtime":1612605207736,"results":"32","hashOfConfig":"28"},{"size":1168,"mtime":1612608509237,"results":"33","hashOfConfig":"28"},{"size":9197,"mtime":1612670880039,"results":"34","hashOfConfig":"28"},{"size":6441,"mtime":1612609718632,"results":"35","hashOfConfig":"28"},{"size":4620,"mtime":1612689584392,"results":"36","hashOfConfig":"28"},{"size":236,"mtime":1611409869129,"results":"37","hashOfConfig":"28"},{"size":2195,"mtime":1612686801045,"results":"38","hashOfConfig":"28"},{"size":2223,"mtime":1612610483310,"results":"39","hashOfConfig":"28"},{"size":9152,"mtime":1612692403745,"results":"40","hashOfConfig":"28"},{"size":382,"mtime":1611405091613,"results":"41","hashOfConfig":"28"},{"size":1959,"mtime":1612693029015,"results":"42","hashOfConfig":"28"},{"size":2567,"mtime":1612605186592,"results":"43","hashOfConfig":"28"},{"size":4811,"mtime":1612690118349,"results":"44","hashOfConfig":"28"},{"size":6336,"mtime":1612609714631,"results":"45","hashOfConfig":"28"},{"size":1242,"mtime":1612605172383,"results":"46","hashOfConfig":"28"},{"size":6396,"mtime":1612697434514,"results":"47","hashOfConfig":"28"},{"size":2830,"mtime":1612672263762,"results":"48","hashOfConfig":"28"},{"size":544,"mtime":1612613551471,"results":"49","hashOfConfig":"28"},{"size":5187,"mtime":1612690497918,"results":"50","hashOfConfig":"28"},{"size":323,"mtime":1613304902411,"results":"51","hashOfConfig":"28"},{"size":2941,"mtime":1612693304983,"results":"52","hashOfConfig":"28"},{"size":4173,"mtime":1613309528705,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ooj2mf",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/reportWebVitals.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/App.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/index.js",["120"],"import App from './App';\nimport 'antd/dist/antd.css';",["121","122"],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Auth/LoginPage/LoginPage.js",["123"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { login } from '../../../Store/Action/auth';\nimport { withRouter } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst email_regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\nexport class LoginPage extends Component {\n\n    //  Holds all the state variables\n    state = {\n        email: '',\n        password: '',\n        error: '',\n        hidden: true\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.handleLogin = this.handleLogin.bind(this)\n        this.handleError = this.handleError.bind(this)\n        this.flushError = this.flushError.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.handlePasswordToogle = this.handlePasswordToogle.bind(this)\n    } \n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({error: nextProps.error.message})\n            }else{\n                this.setState({error: nextProps.error.response.data.error})\n            }\n        }\n    }\n\n    //  Handles Error\n    handleError(error) {\n        this.setState({error: error})\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({error: ''})\n    }\n\n    //  Handles Login\n    handleLogin(e){\n        e.preventDefault();\n        if(this.state.email === ''){this.handleError('Email can not be Empty')}\n        else if(!email_regex.test(this.state.email)) {this.handleError('Invalid Email Format')}\n        else if(this.state.password === ''){this.handleError('Password can not be Empty')}\n        else {\n            this.flushError()\n            const body = { email: this.state.email, password: this.state.password } \n            this.props.login(body)\n        }\n    }\n\n    //Handle Password Visibility\n    handlePasswordToogle() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n\n    //  Hadles change of text in textfield \n    onChange(e){\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        if(this.props.isAuthenticated){\n            this.props.history.goBack()\n        }\n        return(\n            <div className=\"main-wrapper\" id=\"app\">\n                <div className=\"page-wrapper full-page\">\n                    <div className=\"page-content d-flex align-items-center justify-content-center\">\n                        <div className=\"row w-60 mx-0 auth-page\">\n                            <div className=\"col-md-8 col-xl-6 mx-auto\">\n                                <div className=\"card\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12 pl-md-4\">\n                                            <div className=\"auth-form-wrapper px-5 py-5\" style={this.props.authLoading?{opacity: 0.4, pointerEvents: \"none\"}:{}}>\n                                                <a href=\"#\" className=\"books-ui-logo d-block mb-2\">Quick<span>Books</span></a>\n                                                <h5 className=\"text-muted font-weight-normal mb-4\">Welcome back! Log in to your account.</h5>\n                                                {this.props.authLoading?\n                                                    <div style={{height: \"100%\", textAlign: \"center\"}}>\n                                                        <CircularProgress size={40} thickness={4}/>\n                                                    </div>\n                                                :\"\"}\n                                                <form className=\"forms-sample\" onSubmit={this.handleLogin}>\n                                                    {this.state.error?\n                                                        <div class=\"alert alert-danger\" role=\"alert\">\n                                                            {this.state.error}\n                                                        </div>\n                                                    :\"\"}\n                                                    <div className=\"form-group\">\n                                                        <label >Email address</label>\n                                                        <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={this.onChange} value={this.state.email} placeholder=\"Email\"/>\n                                                    </div>\n                                                    <div className=\"form-group\" style={{ position: \"relative\"}}>\n                                                        <label>Password</label>\n                                                        <input type={this.state.hidden?\"password\":\"text\"} className=\"form-control\" id=\"password\" name=\"password\" onChange={this.onChange} value={this.state.password} placeholder=\"Password\"/>\n                                                        {this.state.hidden?<VisibilityIcon onClick={this.handlePasswordToogle} style={{ position: 'absolute', right: '0', top: '30px', padding: '9px 8px', transition: '0.3s', fontSize: '36px', cursor: 'pointer' }}/>:<VisibilityOffIcon onClick={this.handlePasswordToogle} style={{ position: 'absolute', right: '0', top: '30px', padding: '9px 8px', transition: '0.3s', fontSize: '36px', cursor: 'pointer' }}/>}\n                                                    </div>\n                                                    <div className=\"mt-3\">\n                                                        <input type=\"submit\" style={{ float: 'right' }} className=\"btn btn-primary mr-2 mb-2 mb-md-0\" value=\"Login\"/>\n                                                    </div>\n                                                    <a href=\"/auth/reset\" className=\"d-block mt-3 text-muted\">Forgot Password? Reset</a>\n                                                </form>\n                                                <div style={{ margin: '20px', marginTop: '40px' }}>\n                                                    <div style={{ textAlign: 'center', justifyContent: 'center' }}>\n                                                        <div>\n                                                            <label>Or</label>\n                                                        </div>\n                                                        <a href=\"/auth/register\" style={{ width: '100%' }} className=\"d-block mt-3 text-muted\">Don't have an Account? Register</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>        \n                    </div>\n                </div>\n          </div>\n        );\n    }\n}\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error\n  });\n  \n\nexport default connect(mapStateToProps, {login})(withRouter(LoginPage));","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Store/Reducer/index.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Route.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Auth/RegisterPage/RegisterPage.js",["124"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { register } from '../../../Store/Action/auth';\nimport { withRouter } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst email_regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\nexport class RegisterPage extends Component {\n\n    //  Holds all the state variables\n    state = {\n        email: '',\n        password: '',\n        mobile: '',\n        first_name: '',\n        last_name: '',\n        error: '',\n        hidden: true\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.handleRegister = this.handleRegister.bind(this)\n        this.handleError = this.handleError.bind(this)\n        this.flushError = this.flushError.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.handlePasswordToogle = this.handlePasswordToogle.bind(this)\n    } \n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({error: nextProps.error.message})\n            }else{\n                this.setState({error: nextProps.error.response.data.error})\n            }\n        }\n    }\n\n    //  Handles Error\n    handleError(error) {\n        this.setState({error: error})\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({error: ''})\n    }\n\n    //  Handles Login\n    handleRegister(e){\n        e.preventDefault();\n        console.log(this.state.mobile.length <= 9)\n        if(this.state.first_name === ''){this.handleError('Name can not be Empty')}\n        else if(this.state.last_name === ''){this.handleError('Name can not be Empty')}\n        else if(this.state.email === ''){this.handleError('Email can not be Empty')}\n        else if(!email_regex.test(this.state.email)) {this.handleError('Invalid Email Format')}\n        else if(this.state.mobile === ''){this.handleError('Mobile can not be Empty')}\n        else if(this.state.mobile.length !== 10 ){this.handleError('Invalid Mobile Number')}\n        else if(this.state.password === ''){this.handleError('Password can not be Empty')}\n        else{\n            this.flushError()\n            const body = { first_name: this.state.first_name, last_name: this.state.last_name, email: this.state.email, password: this.state.password, mobile: this.state.mobile, }\n            this.props.register(body)\n        }\n    }\n\n    //Handle Password Visibility\n    handlePasswordToogle() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n\n    //  Hadles change of text in textfield \n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        if(this.props.isAuthenticated){\n            this.props.history.push('/')\n        }\n        return(\n            <div className=\"main-wrapper\" id=\"app\">\n                <div className=\"page-wrapper full-page\">\n                    <div className=\"page-content d-flex align-items-center justify-content-center\">\n                        <div className=\"row w-60 mx-0 auth-page\">\n                            <div className=\"col-md-8 col-xl-6 mx-auto\">\n                                <div className=\"card\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12 pl-md-4\">\n                                            <div className=\"auth-form-wrapper px-5 py-5\" style={this.props.authLoading?{opacity: 0.4, pointerEvents: \"none\"}:{}}>\n                                                <a href=\"#\" className=\"books-ui-logo d-block mb-2\">Quick<span>Books</span></a>\n                                                <h5 className=\"text-muted font-weight-normal mb-4\">Welcome back! Log in to your account.</h5>\n                                                {this.props.authLoading?\n                                                    <div style={{height: \"100%\", textAlign: \"center\"}}>\n                                                        <CircularProgress size={40} thickness={4}/>\n                                                    </div>\n                                                :\"\"}\n                                                <form className=\"forms-sample\" onSubmit={this.handleRegister}>\n                                                    {this.state.error?\n                                                        <div class=\"alert alert-danger\" role=\"alert\">\n                                                            {this.state.error}\n                                                        </div>\n                                                    :\"\"}\n                                                    <div className=\"row form-group\">\n                                                        <div className=\"col-md-6\">\n                                                            <label>First Name</label>\n                                                            <input type=\"text\" className=\"form-control\" id=\"first_name\" name=\"first_name\" onChange={this.onChange} value={this.state.first_name} placeholder=\"First Name\"/>    \n                                                        </div>\n                                                        <div className=\"col-md-6\">\n                                                            <label>Last Name</label>\n                                                            <input type=\"text\" className=\"form-control\" id=\"last_name\" name=\"last_name\" onChange={this.onChange} value={this.state.last_name} placeholder=\"Last Name\"/>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label>Email address</label>\n                                                        <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={this.onChange} value={this.state.email} placeholder=\"Email\"/>\n                                                    </div>\n                                                    <div className=\"form-group\">\n                                                        <label>Mobile</label>\n                                                        <input type=\"text\" className=\"form-control\" id=\"mobile\" name=\"mobile\" onChange={this.onChange} value={this.state.mobile} placeholder=\"Mobile\"/>\n                                                        <span style={{ color: 'grey', fontSize: '11px'}}>Indian mobile numbers are only allowed</span>\n                                                    </div>\n                                                    <div class=\"form-group\" style={{ position: 'relative' }}>\n                                                        <label>Password</label>\n                                                        <input type={this.state.hidden?\"password\":\"text\"} className=\"form-control\" id=\"password\" name=\"password\" onChange={this.onChange} value={this.state.password} placeholder=\"Password\"/>\n                                                        {this.state.hidden?<VisibilityIcon onClick={this.handlePasswordToogle} style={{ position: 'absolute', right: '0', top: '30px', padding: '9px 8px', transition: '0.3s', fontSize: '36px', cursor: 'pointer' }}/>:<VisibilityOffIcon onClick={this.handlePasswordToogle} style={{ position: 'absolute', right: '0', top: '30px', padding: '9px 8px', transition: '0.3s', fontSize: '36px', cursor: 'pointer' }}/>}\n                                                        <span style={{ color: 'grey', fontSize: '11px'}}>Use 6 or more characters with a mix of letters, numbers & symbols</span>\n                                                    </div>\n                                                    <div className=\"mt-3\">\n                                                        <input type=\"submit\" style={{ float: 'right' }} className=\"btn btn-primary mr-2 mb-2 mb-md-0\" value=\"Register\"/>\n                                                    </div>\n                                                    <a href=\"/auth/login\" className=\"d-block mt-3 text-muted\">Have an Account? Login</a>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>        \n                    </div>\n                </div>\n          </div>\n        );\n    }\n}\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error\n  });\n  \n\nexport default connect(mapStateToProps, {register})(withRouter(RegisterPage));","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Auth/PasswordResetPage/ForgotPasswordPage.js",["125"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { resetPassword } from '../../../Store/Action/auth';\nimport { withRouter } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst email_regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\nexport class ForgotPasswordPage extends Component {\n\n    //  Holds all the state variables\n    state = {\n        email: '',\n        error: '',\n        success: '',\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.handleForgotPassword = this.handleForgotPassword.bind(this)\n        this.handleError = this.handleError.bind(this)\n        this.flushError = this.flushError.bind(this)\n        this.onChange = this.onChange.bind(this)\n    } \n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({error: nextProps.error.message})\n            }else{\n                this.setState({error: nextProps.error.response.data.error})\n            }\n        }\n        console.log(nextProps)\n        if(nextProps.success !== undefined) {\n            if(nextProps.success.msg !== undefined) {\n                this.setState({success: nextProps.success.msg})\n            }\n        }\n    }\n\n    //  Handles Error\n    handleError(error) {\n        this.setState({error: error})\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({error: ''})\n        this.setState({success: ''})\n    }\n\n    //  Handles Password Reset\n    handleForgotPassword(e){\n        e.preventDefault();\n        if(this.state.email === ''){this.handleError('Email can not be Empty')}\n        else if(!email_regex.test(this.state.email)) {this.handleError('Invalid Email Format')}\n        else{\n            this.flushError()\n            const body = {email: this.state.email}\n            this.props.resetPassword(body)\n        }\n    }\n\n    //  Hadles change of text in textfield \n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        if(this.props.isAuthenticated){\n            this.props.history.push('/')\n        }\n        return(\n            <div className=\"main-wrapper\" id=\"app\">\n                <div className=\"page-wrapper full-page\">\n                    <div className=\"page-content d-flex align-items-center justify-content-center\">\n                        <div className=\"row w-60 mx-0 auth-page\">\n                            <div className=\"col-md-8 col-xl-6 mx-auto\">\n                                <div className=\"card\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12 pl-md-4\">\n                                            <div className=\"auth-form-wrapper px-5 py-5\" style={this.props.authLoading?{opacity: 0.4, pointerEvents: \"none\"}:{}}>\n                                                <a href=\"#\" className=\"books-ui-logo d-block mb-2\">Quick<span>Books</span></a>\n                                                <h5 className=\"text-muted font-weight-normal mb-4\">Welcome! Reset you account password.</h5>\n                                                {this.props.authLoading?\n                                                    <div style={{height: \"100%\", textAlign: \"center\"}}>\n                                                        <CircularProgress size={40} thickness={4}/>\n                                                    </div>\n                                                :\"\"}\n                                                <form className=\"forms-sample\" onSubmit={this.handleForgotPassword}>\n                                                    {this.state.error?\n                                                    <div>\n                                                        <div class=\"alert alert-danger\" role=\"alert\">\n                                                            {this.state.error}\n                                                        </div>\n                                                    </div>\n                                                    :\"\"}      \n                                                    {this.state.success?\n                                                    <div>\n                                                        <div class=\"alert alert-success\" role=\"alert\">\n                                                            {this.state.success}\n                                                        </div>\n                                                    </div>\n                                                    :\"\"}                                                    \n                                                    <div className=\"form-group\">\n                                                        <label>Email address</label>\n                                                        <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" onChange={this.onChange} value={this.state.email} placeholder=\"Email\"/>\n                                                    </div>\n                                                    <div className=\"mt-3\">\n                                                        <input type=\"submit\" style={{ float: 'right' }} className=\"btn btn-primary mr-2 mb-2 mb-md-0\" value=\"Reset Password\"/>\n                                                    </div>\n                                                    <a href=\"/auth/login\" className=\"d-block mt-3 text-muted\">Know your Password? Login</a>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>        \n                    </div>\n                </div>\n          </div>\n        );\n    }\n}\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error,\n    success: state.auth.reset\n  });\n  \n\nexport default connect(mapStateToProps, {resetPassword})(withRouter(ForgotPasswordPage));",["126","127"],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Home.js",["128"],"import React, { Component,Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { renderRoutes } from 'react-router-config';\nimport { Search } from './Components/Search/Search';\nimport { Notification } from './Components/Notification/Notification';\nimport { Profile } from './Components/Profile/Profile';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport {withRouter} from 'react-router'\nimport { logout } from '../../Store/Action/auth'\n\nexport class HomePage extends Component {\n\n    state = {\n        profile_img: '',\n        notifications: '',\n    }\n\n    constructor(props) {\n        super(props);\n        this.handleLogout = this.handleLogout.bind(this)\n    }\n\n    handleLogout() {\n        console.log(this.props)\n        this.props.logout()\n    }\n\n    //  Fired when the component recieves new props\n    componentWillReceiveProps(nextProps){\n        this.setState({ \n            profile_img: nextProps.user?nextProps.user.user.profile_img:\"https://firebasestorage.googleapis.com/v0/b/nextbooks-1a9f0.appspot.com/o/Profile%2Funnamed.jpg?alt=media&token=26aa8e12-b869-4a2f-afde-ced8ebe2bf0e\",\n            notifications: nextProps.user?nextProps.user.user.notifications.reverse().slice(0,6):\"\",\n        })\n    }\n\n    //  Fired when the component mounts\n    componentDidMount(){\n        this.setState({ \n            profile_img: this.props.user?this.props.user.user.profile_img:\"https://firebasestorage.googleapis.com/v0/b/nextbooks-1a9f0.appspot.com/o/Profile%2Funnamed.jpg?alt=media&token=26aa8e12-b869-4a2f-afde-ced8ebe2bf0e\",\n            notifications: this.props.user?this.props.user.user.notifications.reverse().slice(0,6):\"\",\n        })\n    }\n\n    render() {\n        if(!this.props.isAuthenticated) {\n            this.props.history.push('/auth/login')\n        }\n        return(\n            <div className=\"main-wrapper loaded sidebar-folded\" id=\"app\" >\n                <nav className=\"sidebar\">\n                    <div className=\"sidebar-header\">\n                        <a href=\"#\" className=\"sidebar-brand\">\n                        Noble<span>UI</span>\n                        </a>\n                        <div className=\"\">\n                            <div style={{ color: '#031a61', fontSize: '20px', fontWeight: '900' }}>\n                                QB\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"sidebar-body\">\n                        <ul className=\"nav\">\n                            <li className={this.props.location.pathname===\"/\"?\"nav-item active\":\"nav-item\"}>  \n                                <a href=\"/\" className=\"nav-link\">\n                                    <AppsIcon style={this.props.location.pathname!==\"/\"?{color: '#727cf5'}:{}}/>\n                                    <span className=\"link-title\">Dashboard</span>\n                                </a>\n                            </li>\n                            <li style={{ marginTop: '20px' }} className={this.props.location.pathname===\"/accounts\"?\"nav-item active\":\"nav-item\"}>  \n                                <a href=\"/accounts\" className=\"nav-link\">\n                                <MenuBookIcon style={this.props.location.pathname!==\"/accounts\"?{color: '#727cf5'}:{}}/>\n                                <span className=\"link-title\">Accounts</span>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n                <div className=\"page-wrapper\">  \n                    <nav class=\"navbar\">\n                        <div class=\"navbar-content\">\n                            <Search location={this.props}/>\n                            <ul class=\"navbar-nav\">\n                                <Notification notifications = {this.state.notifications}/>\n                                <Profile location={this.handleLogout} data = {this.props.user} img = {this.state.profile_img} />\n                            </ul>\n                        </div>\n                    </nav>\n                    <div class=\"page-content\">\n                        <Suspense fallback={<div>Loading..</div>} >\n                            {renderRoutes(this.props.route.routes)}\n                        </Suspense>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n  });\n\nexport default connect(mapStateToProps, {logout})(withRouter(HomePage));","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Dashboard/Dashboard.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Components/Profile/Profile.js",["129","130","131"],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Components/Search/Search.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/ProfilePage.js",["132"],"import React, { Component } from 'react';\nimport { Card, Upload,Spin } from 'antd';\nimport {withRouter} from 'react-router'\nimport { connect } from 'react-redux';\nimport { Button } from 'antd'\nimport { message } from 'antd'\nimport { Divider } from 'antd';\nimport Logs from './Pages/Logs/Logs'\nimport PersonalInfo from './Pages/Personal/Info'\nimport Notifications from './Pages/Notifications/Notification'\nimport Security from './Pages/Security/Security'\nimport { storage } from \"../../../Firebase/firebase\";\nimport { updateUser } from '../../../Store/Action/auth'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ScreenLockPortraitIcon from '@material-ui/icons/ScreenLockPortrait';\nimport LocalActivityIcon from '@material-ui/icons/LocalActivity';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EditIcon from '@material-ui/icons/Edit';\n\nexport class ProfilePage extends Component {\n\n    //  Holds the State\n    state = {\n        menu: 0,\n        profile_img: 'https://firebasestorage.googleapis.com/v0/b/nextbooks-1a9f0.appspot.com/o/Profile%2Funnamed.jpg?alt=media&token=26aa8e12-b869-4a2f-afde-ced8ebe2bf0e',\n        is_loading: false,\n    }\n\n    //  Constructor\n    constructor(props){\n        super(props)\n        this.handleNav = this.handleNav.bind(this)\n        this.handleUpload = this.handleUpload.bind(this)\n    }\n    \n    //  Fired when the component recieves new props\n    componentWillReceiveProps(nextProps){\n        this.setState({ \n            profile_img: nextProps.auth?nextProps.auth.user.profile_img:\"https://firebasestorage.googleapis.com/v0/b/nextbooks-1a9f0.appspot.com/o/Profile%2Funnamed.jpg?alt=media&token=26aa8e12-b869-4a2f-afde-ced8ebe2bf0e\",\n         })\n    }\n\n    //  Fired when the component mounts\n    componentDidMount(){\n        this.setState({ \n            profile_img: this.props.auth?this.props.auth.user.profile_img:\"https://firebasestorage.googleapis.com/v0/b/nextbooks-1a9f0.appspot.com/o/Profile%2Funnamed.jpg?alt=media&token=26aa8e12-b869-4a2f-afde-ced8ebe2bf0e\",\n         })\n    }\n\n\n    //  Handles Menu Navigation\n    handleNav(item){\n        this.setState({\n            menu: item,\n        })\n    }\n\n    //  Uploads profile image to firebase storage\n    handleUpload(e){\n        this.setState({is_loading: true})\n        const uploadTask = storage.ref(`/Profile/${this.props.auth?this.props.auth.user.email:\"\"}`).put(e)\n        uploadTask.on('state_changed', \n        (snapShot) => {\n\n        }, (err) => {\n            this.setState({is_loading: false})\n            message(err)\n        }, () => {\n            storage.ref('Profile').child(this.props.auth?this.props.auth.user.email:\"\").getDownloadURL()\n            .then(fireBaseUrl => {\n            message.success(`Profile Image updated successfully.`);\n            this.props.updateUser(\"\",'','','',fireBaseUrl)\n            this.setState({  \n                profile_img: fireBaseUrl,\n                is_loading: false\n            })\n            })\n        })\n    }\n    \n        \n    render() {\n        let menu;\n        if(this.state.menu === 0){\n            menu = <PersonalInfo />;\n        }else if(this.state.menu === 1){\n            menu = <Security />;\n        }else if(this.state.menu === 2){\n            menu = <Logs />;\n        }else if(this.state.menu === 3) {\n            menu = <Notifications />;\n        }\n        return(\n            <div>\n                <nav aria-label=\"breadcrumb\">\n                    <ol class=\"breadcrumb\">\n                        <li class=\"breadcrumb-item\"><a href=\"/\">Profile</a></li>\n                        {this.state.menu === 0?<li class=\"breadcrumb-item active\">Personal Information</li>:\"\"}\n                        {this.state.menu === 1?<li class=\"breadcrumb-item active\">Security</li>:\"\"}\n                        {this.state.menu === 2?<li class=\"breadcrumb-item active\">Logs</li>:\"\"}\n                    </ol>\n                </nav>\n                <div>\n                    <div className=\"row\" style={{ paddingLeft: '60px', paddingRight: '60px', paddingTop: '30px' }}>\n                            <div className=\"col-4\" style={this.state.is_loading?{opacity: '0.3'}:{}}>\n                            <Card style={{ width: '400px', borderColor: 'white' }}>\n                                <div style={{ width: '100%', float: 'right', textAlign: 'end' }}>\n                                <Spin indicator={this.antIcon} spinning={this.state.is_loading} style={{ float: 'left' }}/>\n                                <Upload accept=\".png, .jpg, .jpeg\" multiple={false} beforeUpload={this.handleUpload} showUploadList={false} style={{ float: 'right' }}><Button style={{ borderRadius: '50%', width: '20px' }} type=\"primary\"><EditIcon style={{ marginLeft: '-9px', fontSize: '17px'}}/></Button></Upload>\n                                </div>\n                            <img\n                                width=\"80%\"\n                                src={this.state.profile_img}\n                            ></img>\n                            <h3 style={{ fontWeight: 'normal', marginTop: '15px' }}>{this.props.auth?this.props.auth.user.first_name + this.props.auth.user.last_name:\"\"}</h3>\n                            <h6 style={{ color: '#525252', fontSize: '13', fontWeight: 'lighter' }}>{this.props.auth?this.props.auth.user.email:\"\"}</h6>\n                            <div style={{ marginTop: '20px', textAlign: 'justify' }}>\n                            {this.props.auth?this.props.auth.user.bio === ''?\"Hey there. Please Update your profile\":this.props.auth.user.bio:\"Hey there. Please Update your profile\"}\n                                <div style={{ marginTop: '20px', textAlign: 'justify' }}>\n                                    <p>{this.props.auth?this.props.auth.user.mobile:\"\"}</p>\n                                </div>\n                            </div>\n                            <Divider />\n                            <div className=\"menu-content\" data-simplebar>\n                                <li className=\"menu-label\">Profile Settings</li>\n                                <ul className=\"metismenu left-sidenav-menu\" style={{ overflow: 'hidden' }}>\n                                    <List component=\"nav\" onClick={()=>this.handleNav(0)} style={{ paddingTop: '0px', paddingBottom: '0px'}}>\n                                        <ListItem button>\n                                            <ListItemIcon><AccountCircleIcon/></ListItemIcon>\n                                            <ListItemText primary=\"Personal Info\" >\n                                            </ListItemText>\n                                        </ListItem>\n                                    </List>\n                                    <List component=\"nav\" onClick={()=>this.handleNav(2)} style={{ paddingTop: '0px', paddingBottom: '0px'}}>\n                                        <ListItem button>\n                                            <ListItemIcon><LocalActivityIcon/></ListItemIcon>\n                                            <ListItemText primary=\"Logs\" >\n                                            </ListItemText>\n                                        </ListItem>\n                                    </List>\n                                    <List component=\"nav\" onClick={()=>this.handleNav(3)} style={{ paddingTop: '0px', paddingBottom: '0px'}}> \n                                        <ListItem button>\n                                            <ListItemIcon><NotificationsIcon/></ListItemIcon>\n                                            <ListItemText primary=\"Notification\" >\n                                            </ListItemText>\n                                        </ListItem>\n                                    </List>\n                                    <List component=\"nav\" onClick={()=>this.handleNav(1)} style={{ paddingTop: '0px', paddingBottom: '0px'}}>\n                                        <ListItem button>\n                                            <ListItemIcon><ScreenLockPortraitIcon/></ListItemIcon>\n                                            <ListItemText primary=\"Security\" >\n                                            </ListItemText>\n                                        </ListItem>\n                                    </List>\n                                </ul>\n                            </div>\n                            </Card>\n                        </div>\n                        <div className=\"col-8\" >\n                            <Card style={{ width: '100%', borderColor: 'white' }}>\n                                {menu}\n                            </Card>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth.user,\n    is_loading: state.auth.isLoading\n  });\n\nexport default connect(mapStateToProps,{updateUser})(withRouter(ProfilePage));",["133","134"],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Store/configureStore.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Components/Notification/Notification.js",["135","136","137"],"import React from 'react'\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Moment from 'moment';\n\nexport class Notification extends React.Component {\n\n    getNotiType(type) {\n        if(type === 'Auth') {return 'AU'}\n        if(type === 'Account') {return 'AC'}\n        if(type === 'Transcation') {return 'TC'}\n        if(type === 'Profile') {return 'PR'}\n        return 'GN'\n    }\n\n    render() {\n        return(\n            <li class=\"nav-item dropdown nav-notifications\">\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"notificationDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                <NotificationsIcon />\n                </a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"notificationDropdown\">\n                <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                    <p class=\"mb-0 font-weight-medium\">New Notifications</p>\n                </div>\n                <div class=\"dropdown-body\" style={{height: '100%'}}>\n                    {this.props.notifications?this.props.notifications.map((data)=>{\n                        var notiType = this.getNotiType(data.type)\n                        return(\n                            <a href=\"javascript:;\" class=\"dropdown-item\">\n                                <div class=\"icon\">\n                                    <i data-feather=\"\">{notiType}</i>\n                                </div>\n                                <div class=\"content\">\n                                    <p>{data.message}</p>\n                                    <p class=\"sub-text text-muted\">{Moment(data.created).startOf('sec').fromNow()}</p>\n                                </div>\n                            </a>\n                        )\n                    }):\"\"}\n                </div>\n                </div>\n            </li>\n        );\n    }\n}\n\nexport default Notification","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Store/Reducer/auth.js",["138","139"],"import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    RESET_PASSWORD,\n    CHANGE_PASSWORD,\n    UPDATE_SUCCESS,\n    DEACTIVATE_SUCCESS,\n    AUTH_INIT\n  } from '../Action/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    isLoading: false,\n    authLoading: false,\n    user: null,\n  };\n\n  export default function (state = initialState ,action) {\n    switch (action.type) {\n\n      case USER_LOADED:\n        return {\n          ...state,\n          isAuthenticated: true,\n          isLoading: false,\n          authLoading: false,\n          user: action.payload,\n        };\n      case LOGIN_SUCCESS:\n        localStorage.setItem('token', action.payload.Token);\n        return {\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          authLoading: false,\n          isLoading: false,\n        };\n      case REGISTER_SUCCESS:\n        localStorage.setItem('token', action.payload.Token)\n        return {\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          isLoading: false,\n          authLoading: false\n        };\n      case AUTH_ERROR:\n        return {\n          ...state,\n          error: action.payload,\n          authLoading: false\n        }\n      case LOGIN_FAIL:\n      case LOGOUT_SUCCESS:\n        localStorage.removeItem('token');\n        return{\n          logout: 'SUCCESS',\n          authLoading: false\n        }\n      case RESET_PASSWORD:\n        return{\n          ...state,\n          reset: action.payload,\n          authLoading: false\n        };\n      case CHANGE_PASSWORD:\n        return{\n          ...state,\n          authLoading: false,\n          reset: action.payload\n        };\n      case REGISTER_FAIL:\n        localStorage.removeItem('token');\n        return {\n          ...state,\n          token: null,\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n          authLoading: false\n        };\n      case UPDATE_SUCCESS:\n        return{\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          isLoading: false,\n        }\n      case DEACTIVATE_SUCCESS:\n        return{\n          ...state,\n          isAuthenticated: false,\n          isLoading: false\n        }\n      case AUTH_INIT:\n        return{\n          isAuthenticated: false,\n          authLoading: true,\n          user: null,\n        }   \n      default:\n        return state;\n    }\n  }","/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Store/Action/auth.js",["140"],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Auth/PasswordResetPage/ResetPassword.js",["141","142"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { changePassword } from '../../../Store/Action/auth';\nimport { withRouter } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst email_regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\nexport class ResetPasswordPage extends Component {\n\n    //  Holds all the state variables\n    state = {\n        password: '',\n        error: '',\n        success: '',\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.handleResetPassword = this.handleResetPassword.bind(this)\n        this.handleError = this.handleError.bind(this)\n        this.flushError = this.flushError.bind(this)\n        this.onChange = this.onChange.bind(this)\n    } \n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({error: nextProps.error.message})\n            }else{\n                this.setState({error: nextProps.error.response.data.error})\n            }\n        }\n        console.log(nextProps)\n        if(nextProps.success !== undefined) {\n            if(nextProps.success.msg !== undefined) {\n                this.setState({success: nextProps.success.msg})\n            }\n        }\n    }\n\n    //  Handles Error\n    handleError(error) {\n        this.setState({error: error})\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({error: ''})\n        this.setState({success: ''})\n    }\n\n    //  Handles Password Reset\n    handleResetPassword(e){\n        e.preventDefault();\n        if(this.state.password === ''){this.handleError('Password can not be Empty')}\n        else{\n            this.flushError()\n            const body = {newpassword: this.state.password, resetLink: this.props.match.params.token}\n            this.props.changePassword(body)\n        }\n\n    }\n\n    //  Hadles change of text in textfield \n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        if(this.props.isAuthenticated){\n            this.props.history.push('/')\n        }\n        return(\n            <div className=\"main-wrapper\" id=\"app\">\n                <div className=\"page-wrapper full-page\">\n                    <div className=\"page-content d-flex align-items-center justify-content-center\">\n                        <div className=\"row w-60 mx-0 auth-page\">\n                            <div className=\"col-md-8 col-xl-6 mx-auto\">\n                                <div className=\"card\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12 pl-md-4\">\n                                            <div className=\"auth-form-wrapper px-5 py-5\" style={this.props.authLoading?{opacity: 0.4, pointerEvents: \"none\"}:{}}>\n                                                <a href=\"#\" className=\"books-ui-logo d-block mb-2\">Quick<span>Books</span></a>\n                                                <h5 className=\"text-muted font-weight-normal mb-4\">Create new Password.</h5>\n                                                {this.props.authLoading?\n                                                    <div style={{height: \"100%\", textAlign: \"center\"}}>\n                                                        <CircularProgress size={40} thickness={4}/>\n                                                    </div>\n                                                :\"\"}\n                                                <form className=\"forms-sample\" onSubmit={this.handleResetPassword}>\n                                                    {this.state.error?\n                                                    <div>\n                                                        <div class=\"alert alert-danger\" role=\"alert\">\n                                                            {this.state.error}\n                                                        </div>\n                                                    </div>\n                                                    :\"\"}      \n                                                    {this.state.success?\n                                                    <div>\n                                                        <div class=\"alert alert-success\" role=\"alert\">\n                                                            {this.state.success}\n                                                        </div>\n                                                    </div>\n                                                    :\"\"}                                                    \n                                                    <div className=\"form-group\">\n                                                        <label>New Password</label>\n                                                        <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" onChange={this.onChange} value={this.state.password} placeholder=\"New Password\" disabled={this.state.success!==''}/>\n                                                    </div>\n                                                    <div className=\"mt-3\">\n                                                        <input type=\"submit\" style={{ float: 'right' }} className=\"btn btn-primary mr-2 mb-2 mb-md-0\" disabled={this.state.success!==''} value=\"Reset Password\"/>\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>        \n                    </div>\n                </div>\n          </div>\n        );\n    }\n}\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error,\n    success: state.auth.reset\n  });\n  \n\nexport default connect(mapStateToProps, {changePassword})(withRouter(ResetPasswordPage));",["143","144"],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Store/Action/types.js",[],["145","146"],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Personal/Info.js",["147","148"],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Logs/Logs.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Firebase/firebase.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Security/Security.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Accounts/Accounts.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/ProfilePage/Pages/Notifications/Notification.js",[],"/Users/joan/Documents/Louji/Project/QuickBooks/frontend/books/src/Pages/Books/Accounts/Components/AccountTable.js",["149"],{"ruleId":"150","severity":1,"message":"151","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":11},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":89,"column":49,"nodeType":"160","endLine":89,"endColumn":100},{"ruleId":"158","severity":1,"message":"159","line":95,"column":49,"nodeType":"160","endLine":95,"endColumn":100},{"ruleId":"158","severity":1,"message":"159","line":84,"column":49,"nodeType":"160","endLine":84,"endColumn":100},{"ruleId":"154","replacedBy":"161"},{"ruleId":"156","replacedBy":"162"},{"ruleId":"158","severity":1,"message":"159","line":53,"column":25,"nodeType":"160","endLine":53,"endColumn":63},{"ruleId":"163","severity":1,"message":"164","line":8,"column":5,"nodeType":"165","messageId":"166","endLine":10,"endColumn":6},{"ruleId":"158","severity":1,"message":"159","line":15,"column":17,"nodeType":"160","endLine":15,"endColumn":163},{"ruleId":"158","severity":1,"message":"167","line":37,"column":25,"nodeType":"160","endLine":37,"endColumn":109},{"ruleId":"168","severity":1,"message":"169","line":115,"column":29,"nodeType":"160","endLine":118,"endColumn":30},{"ruleId":"154","replacedBy":"170"},{"ruleId":"156","replacedBy":"171"},{"ruleId":"158","severity":1,"message":"159","line":18,"column":17,"nodeType":"160","endLine":18,"endColumn":168},{"ruleId":"158","severity":1,"message":"159","line":29,"column":29,"nodeType":"160","endLine":29,"endColumn":74},{"ruleId":"172","severity":1,"message":"173","line":29,"column":37,"nodeType":"174","messageId":"175","endLine":29,"endColumn":51},{"ruleId":"150","severity":1,"message":"176","line":3,"column":5,"nodeType":"152","messageId":"153","endLine":3,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":25,"column":3,"nodeType":"179","endLine":111,"endColumn":4},{"ruleId":"150","severity":1,"message":"180","line":156,"column":9,"nodeType":"152","messageId":"153","endLine":156,"endColumn":15},{"ruleId":"150","severity":1,"message":"181","line":7,"column":7,"nodeType":"152","messageId":"153","endLine":7,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":84,"column":49,"nodeType":"160","endLine":84,"endColumn":100},{"ruleId":"154","replacedBy":"182"},{"ruleId":"156","replacedBy":"183"},{"ruleId":"154","replacedBy":"184"},{"ruleId":"156","replacedBy":"185"},{"ruleId":"150","severity":1,"message":"186","line":9,"column":7,"nodeType":"152","messageId":"153","endLine":9,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":141,"column":71,"nodeType":"189","endLine":141,"endColumn":79},{"ruleId":"150","severity":1,"message":"190","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["191"],"no-negated-in-lhs",["192"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["191"],["192"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["191"],["192"],"no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'USER_LOADING' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'config' is assigned a value but never used.","'email_regex' is assigned a value but never used.",["191"],["192"],["191"],["192"],"'success' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]